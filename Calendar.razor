

<div class="flex aspect-square w-full flex-col rounded-xl border border-zinc-200 dark:bg-zinc-900 dark:border-zinc-800">
    
    @* Titulos *@
    <div class="flex h-max w-full items-center justify-center gap-2 py-3">

        <button @onclick="Before" class="h-4 w-4 bg-transparent">
            <svg class="h-full w-full fill-zinc-600 dark:fill-zinc-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z" /></svg>
        </button>

        <label @onclick="Reset" class="text-xl font-bold text-zinc-800 dark:text-zinc-400">@(new DateTime(CurrentYear, CurrentMonth, 1).ToString("MMMM yyyy"))</label>

        <button @onclick="After" class="h-4 w-4 bg-transparent">
            <svg class="h-full w-full fill-zinc-600 dark:fill-zinc-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z" /></svg>
        </button>

    </div>

    <div class="calendar my-3">

        <ul class="weeks rounded-lg p-1 font-normal text-zinc-400 dark:bg-zinc-900 dark:text-zinc-400">
            <li class="font-bold text-current-500">DO</li>
            <li>LU</li>
            <li>MA</li>
            <li>MI</li>
            <li>JU</li>
            <li>VI</li>
            <li class="font-bold text-current-500">SA</li>
        </ul>

        <ul class="grid grid-cols-7">

            @{
                int firstDayOfMonth = new DateTime(CurrentYear, CurrentMonth, 1).DayOfWeek.GetHashCode();
                int lastDateOfMonth = DateTime.DaysInMonth(CurrentYear, CurrentMonth);
                int lastDayOfMonth = new DateTime(CurrentYear, CurrentMonth, lastDateOfMonth).DayOfWeek.GetHashCode();
                int lastDateOfLastMonth = (new DateTime(CurrentYear, CurrentMonth, 1)).AddDays(-1).Day;

                int c = 0;
            }


            @for (int i = firstDayOfMonth; i > 0; i--)
            {
                c++;
                var lastMonth = (new DateOnly(CurrentYear, CurrentMonth, 1)).AddMonths(-1);

                @* Tiempo. *@
                var time = new DateTime(lastMonth.Year, lastMonth.Month, lastDateOfLastMonth - i + 1);

                @* Control. *@
                <Day OnClick="OnClick" Value="time" Style="2" />

            }

            @for (int i = 1; i <= lastDateOfMonth; i++)
            {
                c++;
                @* Tiempo. *@
                var time = new DateTime(CurrentYear, CurrentMonth, i);

                var filter = Events.Where(t =>
                {
                    var actual = new DateTime(t.DateStart.Year, t.DateStart.Month, t.DateStart.Day);
                    return actual == time;
                });

                var have = filter.Any();

                @* Control. *@
                <Day OnClick="OnClick" Value="time" Style="((time == Today) ? 1 : time == Selected ? 3 : 0)" Exist="have" />

            }

            @for (int i = 1; 0 < (42 - c); i++)
            {
                c++;

                var lastMonth = (new DateOnly(CurrentYear, CurrentMonth, 1)).AddMonths(1);

                @* Tiempo. *@
                var time = new DateTime(lastMonth.Year, lastMonth.Month, i);
                Console.WriteLine(time);
                Console.WriteLine(c);
                Console.WriteLine(42 - c);

                <Day OnClick="OnClick" Value="time" Style="2" />

            }

        </ul>
    </div>

    
</div>


